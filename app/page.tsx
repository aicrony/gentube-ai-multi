/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/GWPlXLgL8q7
 */

'use client';
import React, { useState } from 'react';
import { VideoFromUrlDynamicButton } from '@/components/dynamic/video-from-url-button-event';
import { ImageDynamicButton } from '@/components/dynamic/image-button-event';
// import { VideoFromUploadedImageDynamicButton } from '@/components/dynamic/video-from-uploaded-image';
import Image from 'next/image';
import { VideoFromTextDynamicButton } from '@/components/dynamic/video-from-text-button-event';
import ImageGallery from '@/functions/getGallery';

export default function Home() {
  return (
    <div className="w-full min-h-screen flex flex-col gap-2">
      <main className="flex-1 items-center justify-center">
        <div className="container grid gap-4">
          <div className="grid gap-2 text-center">
            <h1 className="text-4xl font-extrabold text-white sm:text-center sm:text-6xl">
              GenTube.ai
            </h1>
            <p className="max-w-2xl m-auto mt-5 text-xl text-zinc-200 sm:text-center sm:text-2xl">
              Generate AI Images and Videos
            </p>
            <p className="text-gray-500 max-w-md dark:text-gray-400" />
          </div>
          <div className="grid gap-4">
            {/*<form className="grid gap-4">*/}
            <div className="grid gap-2">
              <ImageDynamicButton />

              {/*<VideoFromUploadedImageDynamicButton />*/}

              <VideoFromUrlDynamicButton />

              <VideoFromTextDynamicButton />

              <ImageGallery />
            </div>
          </div>
          <div className="ml-auto flex items-center gap-4 pt-10">
            {/*<VideoList videos={videos} />*/}
            {/*<YouTubeVideoList videos={videos} />*/}
          </div>
        </div>
      </main>
    </div>
  );
}

function PlayCircleIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="12" r="10" />
      <polygon points="10 8 16 12 10 16 10 8" />
    </svg>
  );
}

function UserCircleIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="12" r="10" />
      <circle cx="12" cy="10" r="3" />
      <path d="M7 20.662V19a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v1.662" />
    </svg>
  );
}

function TwitterIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z" />
    </svg>
  );
}

function LogoIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <div
      style={{
        display: 'inline-block',
        backgroundColor: 'white',
        borderRadius: '50%',
        padding: '10px'
      }}
    >
      <Image
        src="/logo.png"
        alt={'Logo'}
        width={50} // specify width
        height={50} // specify height
      />
    </div>
  );
}
